#!/bin/bash
# Run a test after setting the path
# $1: optional name of test(s) to run, defaults to 'all', one of:
#     / all / docker_safe / web / <specific-test(s)> /
#     where <specific-test(s)> may be one of:
#       base file name, i.e.: test_layoutBasic
#       a single test, i.e.: test_layoutBasic.Test_layoutBasic.test_full

CONFIG_FILE=$1
TO_RUN=$2

if [ -z "$CONFIG_FILE" ]; then
    echo "Path to configuration file as first arg necessary."
    exit 1
fi
source $CONFIG_FILE

export DATA_ROOT=$TEST_DATA_ROOT
if [ -z ${TO_RUN} ]; then
    TO_RUN=all
fi

export UNIT_TEST=1  # Suppress all log messages so we only see test messages.
export DEBUG=1

# Test the files that do not run under docker.
web=( \
    test_basic_web \
    test_createMap_web \
    test_http \
    test_job \
    test_jobHttp \
    test_overlayNode_web \
    test_placeNode_web \
    test_placeNode2_web \
    test_projectList \
    test_reflect_web \
    test_webUtil \
)

# Small amount of most recent tests (erase/replace at will)
next=(test_pairwiseAttrStats)

# The rest of the tests.
docker_safe=( \
    test_formatCheck \
    test_layoutBasic \
    test_layoutBasicMakeUI \
    test_layoutBasicMakeUIInferFormat \
    test_layoutMetaData \
    test_layoutZeroReplace \
    test_leesL \
    test_pairwiseAttrStats \
    test_process_categoricals \
    test_reflect \
    test_sim6Layout \
    test_similarity \
    test_stats \
    # NOTE: alphabetical order to make it easier to find tests
)

# Combine the lists above to get ALL of the tests
all=( "${web[@]}" "${docker_safe[@]}" )

# This test is too funky to run regularly.
#test_createMapUi \

if [ $TO_RUN == 'all' ]
    then RUN_THIS="${all[@]}"
    ./test_layout_cli
elif [ $TO_RUN == 'docker_safe' ]
    then RUN_THIS="${docker_safe[@]}"
    ./test_layout_cli
elif [ $TO_RUN == 'web' ]
    then RUN_THIS="${web[@]}"
elif [ $TO_RUN == 'next' ]
    then RUN_THIS="${next[@]}"
else
    RUN_THIS=$TO_RUN
fi

# Run the tests from this directory.
cd $HEXCALC/tests

# Run the tests in global tests directory.
echo Running tests under compute/test
python2.7 -m unittest $RUN_THIS

# Run the tests under compute/www.
# Note an __init__.py needs to exist in each directory
# in the path to the directory containing the tests.
if [ $TO_RUN == 'all' ] || [ $TO_RUN == 'web' ]; then
    echo Running tests under compute/www
    python2.7 -m unittest discover --start-directory $HEXCALC/www
fi

# Run the tests under compute/calc and compute/standalone.
if [ $TO_RUN == 'all' ] || [ $TO_RUN == 'docker_safe' ]; then
    echo Running tests under compute/calc
    python2.7 -m unittest discover --start-directory $HEXCALC/calc
    echo Running tests under compute/standalone
    python2.7 -m unittest discover --start-directory $HEXCALC/standalone
fi
