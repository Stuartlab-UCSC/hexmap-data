#!/bin/bash

# Start the server.
if [[ -z $HEXCALC ]]; then
   echo "Environment variable HEXCALC must be defined to run this script."
   echo "Do you want to run sudo startAsRoot?"
   exit 1
fi

source $HEXCALC/ops/config.sh

# Base arguments for uwsgi.
BASEARGS='--master --processes 2 --threads 100 --callable app --wsgi-file '$HEXCALC/www/www.py' --pidfile2 '$HEXCALC/ops/pid' --logto2 '$HEXCALC/ops/log
PROTECTED_PORT=false
if [ "$PORT" == "443" ] || [ "$PORT" == "80" ]; then
    PROTECTED_PORT=true
fi

# Socket arguments for uwsgi.
if [ $USE_HTTPS == 1 ]; then
    if [ "$PROTECTED_PORT" = true ]; then

        # https, protected port
        SOCKETARGS=' --shared-socket '$WWW_SOCKET' --https =0,'$CERT,$KEY,HIGH,$CA' --uid '$HEX_UID' --gid '$HEX_GID
    else
        # https, unprotected port
        SOCKETARGS='--https-socket '$WWW_SOCKET,$CERT,$KEY,HIGH,$CA
    fi
else
    if [ "$PROTECTED_PORT" = true ]; then
        # http, protected port
        SOCKETARGS=' --shared-socket '$WWW_SOCKET' --http =0 --uid '$HEX_UID' --gid '$HEX_GID
    else
        # http, unprotected port
        SOCKETARGS='--http-socket '$WWW_SOCKET
    fi
fi

if [ $BACK_OR_FOREGROUND == "FORE" ]; then
    uwsgi $BASEARGS $SOCKETARGS
else

    # Save previous log file.
    TIME=$(date '+%F-%T')
    LOG=$HEXCALC/ops/log
    touch $LOG
    mv $LOG $HEXCALC/ops/logsPrev/$TIME
    rm -q $HEXCALC/nohup.out 2> /dev/null

    # Check for a server process.
    $HEXCALC/bin/checkProc
    PROCESS_RUNNING=$?

    # Check for an existing PID file.
    if [ -f "$HEXCALC/ops/pid" ]; then
        if [ "$PROCESS_RUNNING" = 1 ]; then

            # There is a pid file and a process.
            ps -c -u $HEX_UID | grep wsgi
            echo "There is a process ID file at $HEXCALC/ops/pid, and a"
            echo "server running. Stop the server before starting it."
        else

            # There is a pid file, but no process.
            echo "There is a process ID file at $HEXCALC/ops/pid, but can't"
            echo "find a process. If there is no server running, remove this"
            echo "file then start the server"
        fi
        exit 1
    else
        if [ "$PROCESS_RUNNING" = 1 ]; then

            # There is no pid file, but there is a process.
            ps -c -u $HEX_UID | grep wsgi
            echo "There is a server running, but no pid file."
            echo "Kill the server with:"
            echo "    stop <pid>"
            exit 1
        fi
    fi

    # Start the server.
    echo starting...
    (nohup uwsgi $BASEARGS $SOCKETARGS &)

    # Allow the processes to start, change the owner on some files & verify.
    sleep 5
    if [ "$PROTECTED_PORT" = true ]; then
        chown $HEX_UID:$HEX_GID  $HEXCALC/nohup.out
        chown $HEX_UID:$HEX_GID $HEXCALC/ops/logsPrev/$TIME
    fi
    echo "uwsgi processes running:"
    ps -c -u $HEX_UID | grep wsgi
fi
